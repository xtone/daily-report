FROM public.ecr.aws/docker/library/ruby:3.0.7
ENV LANG=C.UTF-8

# 必要なパッケージをインストール
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        build-essential \
        curl \
        ca-certificates \
        libmariadb-dev-compat \
        python3 \
        make \
        g++ && \
    rm -rf /var/lib/apt/lists/*

# Node.js 18.x をNodeSourceリポジトリからインストール（esbuild対応）
RUN curl -fsSL https://deb.nodesource.com/setup_18.x | bash - && \
    apt-get install -y nodejs && \
    node --version && \
    npm --version

# Yarnをnpmでインストール
RUN npm install -g yarn@1.22.19

# Ruby 3.0で使用可能なBundlerをインストール
RUN gem install bundler

ENV APP_ROOT=/daily-report
RUN mkdir -p $APP_ROOT
WORKDIR $APP_ROOT

# アプリケーションコードをコピー
COPY . $APP_ROOT

# 本番環境用の環境変数を設定
ENV RAILS_ENV=production
ENV NODE_ENV=production
ENV RAILS_SERVE_STATIC_FILES=true
ENV RAILS_LOG_TO_STDOUT=true
ENV NODE_OPTIONS="--max-old-space-size=4096"

# Node.js依存関係をインストール（本番用）
RUN yarn install --frozen-lockfile --production

# Ruby依存関係をインストール
RUN bundle config set --local deployment 'true' && \
    bundle config set --local without 'development test' && \
    bundle install --jobs 4 --retry 3

# 必要なディレクトリを作成
RUN mkdir -p tmp/cache public/packs app/assets/builds

# JavaScriptをビルド
RUN yarn build

# CSSを一時的な場所にビルド（Sprocketsの処理を回避）
RUN mkdir -p tmp/css-build
RUN HONOKA_PATH=$(bundle exec ruby -e "puts Gem.find_files('honoka-rails').first.gsub('/lib/honoka-rails.rb', '/assets/stylesheets')") && \
    npx sass ./app/assets/stylesheets/application.sass.scss:./tmp/css-build/application.css --no-source-map --load-path=node_modules --load-path="$HONOKA_PATH"

# ビルドしたJavaScriptファイルを一時的に移動（Sprocketsの処理を回避）
RUN mv app/assets/builds tmp/js-build

# 空のbuildsディレクトリを作成（manifest.jsのlink_treeエラーを回避）
RUN mkdir -p app/assets/builds

# deploymentモードを無効にしてGemfileを変更可能にする
RUN bundle config unset deployment

# jsbundling-railsとcssbundling-railsを一時的に削除
RUN sed -i '/jsbundling-rails/d' Gemfile && sed -i '/cssbundling-rails/d' Gemfile

# bundle installを再実行
RUN bundle install --without development test

# Sprocketsのみでassets:precompileを実行（JavaScriptとCSSビルドをスキップ）
RUN RAILS_ENV=production \
    SECRET_KEY_BASE=dummy \
    DISABLE_SPRING=1 \
    RAILS_LOG_LEVEL=error \
    DISABLE_DATABASE_ENVIRONMENT_CHECK=1 \
    bundle exec rails assets:precompile

# ビルドしたCSSとJavaScriptファイルをpublic/assetsにコピー
RUN cp -r tmp/js-build/* public/assets/ && \
    cp tmp/css-build/application.css public/assets/

# Gemfileを復元（gitから）
RUN git checkout Gemfile || echo "Gemfile restored manually"

# キャッシュをクリーンアップ
RUN yarn cache clean

# PIDファイルとtmpディレクトリをクリーンアップ
RUN rm -rf tmp/pids/* tmp/cache/* && mkdir -p tmp/pids

EXPOSE 3000

# 本番環境用の起動コマンド（PIDファイルを削除してから起動）
CMD ["sh", "-c", "rm -f tmp/pids/server.pid && bundle exec rails server -b 0.0.0.0 -p 3000 -e production"]
